<?php

namespace Tests\Feature\Http\Controllers\api\v1;

use App\Models\Project;

/**
 * Class ProjectEmbeddingControllerTest
 *
 * Run these specific tests
 * php artisan test tests/Feature/Http/Controllers/api/v1/ProjectEmbeddingControllerTest.php
 *
 * @package Tests\Feature\Http\Controllers\api\v1
 */
class ProjectEmbeddingControllerTest extends TestApi
{
    /**
     * Project embeddings api endpoint
     */
    const ENDPOINT_PROJECT_EMBEDDINGS = '/v1/project/:project_id/embeddings';

    /**
     * @var Project
     */
    private Project $project;

    /**
     * @return void
     */
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->project = Project::create([
            'organization_id'   => 1,
            'name'              => $this->faker->colorName(),
            'description'       => $this->faker->text(200),
            'system_prompt'     => $this->faker->text(200),
            'phone_number'      => $this->faker->numerify('+############'),
        ]);
    }

    /**
     * Return endpoint with url params
     *
     * @param int $project_id
     *
     * @return string
     */
    private function getEndpointUrl(int $project_id): string
    {
        return str_replace(':project_id', (string)$project_id, self::ENDPOINT_PROJECT_EMBEDDINGS);
    }

    /**
     * @test
     *
     * @return void
     */
    public function admin_can_store_a_embeddings_for_A_project(): void
    {
        $this->markTestSkipped('Research how to manage vectors in sql lite or how mock that in order to feature test. ');

        $embeddings_data = [ 'data' =>
            [
                '
                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed eu efficitur mauris, at eleifend tortor.
                Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Aliquam interdum
                semper libero, non hendrerit felis ultricies molestie. Suspendisse condimentum nunc maximus ante fringilla,
                a volutpat risus dignissim. In ut faucibus ipsum, nec tincidunt sapien. Ut elit turpis, pulvinar quis
                consequat eget, lobortis ac felis. Curabitur pellentesque porttitor est, nec venenatis ante consectetur a.
                In orci turpis, sagittis id ipsum non, interdum dictum ipsum. Quisque porttitor augue id viverra porta.
                ',
                '
                Ut orci metus, sodales vel gravida sit amet, pharetra a lectus. Mauris suscipit risus ac iaculis tincidunt.
                Aenean vel enim ante. Quisque vel vehicula lacus. Pellentesque consequat, augue nec egestas pretium, sem
                velit lobortis quam, eu egestas dui magna nec sapien. Morbi auctor felis est, eu consequat ante varius in.
                Phasellus viverra arcu ac ipsum efficitur, sed pulvinar libero luctus.
                ',
                '
                Duis ornare sem eu mi semper interdum. Nulla facilisi. Fusce consectetur lectus in enim iaculis, nec iaculis
                arcu placerat. In dignissim lobortis nulla vitae accumsan. Vivamus ultricies nisl odio, sit amet consequat
                ipsum volutpat vel. Nullam faucibus sit amet tellus ut dictum. Donec varius pellentesque neque, sit amet
                lobortis lorem finibus sed. In at blandit elit. Praesent ut tellus quis elit aliquam faucibus. Nulla quis
                sagittis sapien. Nulla commodo diam sed metus facilisis, ut consequat nunc sollicitudin. Curabitur ut
                malesuada erat. Donec sapien nibh, venenatis eu tellus a, blandit pellentesque mauris. Vestibulum quis
                tortor eu orci tincidunt commodo. Ut ut lacus sit amet orci finibus tempor.
                '
            ]
        ];

        $response = $this->withHeader('Authorization', 'Bearer ' . $this->getToken())
            ->json('POST', $this->getEndpointUrl($this->project->id), $embeddings_data);

        $response->assertStatus(200);
        $response->assertJsonPath('message', 'Project embeddings have been stored successfully.');
    }


}
